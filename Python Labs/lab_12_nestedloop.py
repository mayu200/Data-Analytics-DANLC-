# -*- coding: utf-8 -*-
"""lab-12 NestedLoop

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Xg_QkwkuZNBAyRZaxCR_AUx3gkAlnSW-

Accept the count of row from the user

1. Increasing Triangle Pattern:
"""

# Accept the count of rows from the user
rows = int(input("Enter the number of rows: "))

# Generate increasing triangle pattern
for i in range(1, rows + 1):
    print('*' * i)

"""2. Decreasing Triangle Pattern:

"""

# Accept the count of rows from the user
rows = int(input("Enter the number of rows: "))

# Generate decreasing triangle pattern
for i in range(rows, 0, -1):
    print('*' * i)

"""3. Left-Aligned Right-Angle Triangle with Spaces:

"""

# Accept the count of rows from the user
rows = int(input("Enter the number of rows: "))

# Generate left-aligned right-angle triangle with spaces
for i in range(1, rows + 1):
    print(' ' * (rows - i) + '*' * i)

"""4. Right-Aligned Right-Angle Triangle with Spaces:

"""

# Accept the count of rows from the user
rows = int(input("Enter the number of rows: "))

# Generate right-aligned right-angle triangle with spaces
for i in range(rows, 0, -1):
    print(' ' * (rows - i) + '*' * i)

"""5. Binary Triangle Pattern:

"""

# Accept the count of rows from the user
rows = int(input("Enter the number of rows: "))

# Generate binary triangle pattern
for i in range(rows):
    # Generate the binary pattern for each row
    binary_row = ''.join(str((j + i) % 2) for j in range(rows - i))
    print(' ' * i + binary_row)

"""6. Inverted Right-Aligned Triangle with Spaces:

"""

# Accept the count of rows from the user
rows = int(input("Enter the number of rows: "))

# Generate inverted right-aligned triangle with spaces
for i in range(rows, 0, -1):
    print(' ' * (rows - i) + '*' * i)